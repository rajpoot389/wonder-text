{"version":3,"sources":["Component/Alert.js","Component/Navbar.js","Component/Text_Area.js","App.js","index.js"],"names":["Alert","props","content","class","type","role","msg","display","Navbar","useState","alert","href","id","placeholder","Text_Area","text","setText","setAlert","showAlert","setTimeout","className","mode","style","flexDirection","alignItems","height","justifyContent","htmlFor","backgroundColor","rows","value","onChange","event","target","onClick","toLocaleUpperCase","toLocaleLowerCase","newText","split","join","copyTxt","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","length","toFixed","App","setMode","toggleDarkMode","ReactDom","render","StrictMode"],"mappings":"kKAiBeA,EAfD,SAACC,GAQX,OACI,mCARY,WACZ,GAAIA,EAAMC,QACN,OAAO,qBAAKC,MAAK,sBAAiBF,EAAMC,QAAQE,MAAQC,KAAK,QAAtD,SACFJ,EAAMC,QAAQI,MAMlBC,MC6DEC,EAtEA,SAACP,GACd,MAA0BQ,mBAAS,MAAnC,mBAAOC,EAAP,UAUA,OACE,qCACE,cAAC,EAAD,CAAOR,QAASQ,IAGtB,qBAAKP,MAAM,gDAAX,SACA,sBAAKA,MAAM,kBAAX,UACE,mBAAGA,MAAM,eAAeQ,KAAK,IAA7B,oBACA,wBAAQR,MAAM,iBAAiBC,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAAxL,SACE,sBAAMD,MAAM,0BAEd,sBAAKA,MAAM,2BAA2BS,GAAG,yBAAzC,UACE,qBAAIT,MAAM,kCAAV,UACE,oBAAIA,MAAM,WAAV,SACE,mBAAGA,MAAM,kBAAkB,eAAa,OAAOQ,KAAK,IAApD,oBAEF,oBAAIR,MAAM,WAAV,SACE,mBAAGA,MAAM,WAAWQ,KAAK,IAAzB,oBAEF,qBAAIR,MAAM,oBAAV,UACE,mBAAGA,MAAM,2BAA2BQ,KAAK,IAAIC,GAAG,iBAAiBP,KAAK,SAAS,iBAAe,WAAW,gBAAc,QAAvH,sBAGA,qBAAIF,MAAM,gBAAgB,kBAAgB,iBAA1C,UACE,6BAAI,mBAAGA,MAAM,gBAAgBQ,KAAK,IAA9B,sBACJ,6BAAI,mBAAGR,MAAM,gBAAgBQ,KAAK,IAA9B,8BACJ,6BAAI,oBAAIR,MAAM,uBACd,6BAAI,mBAAGA,MAAM,gBAAgBQ,KAAK,IAA9B,yCAGR,oBAAIR,MAAM,WAAV,SACE,mBAAGA,MAAM,oBAAT,2BAGJ,uBAAMA,MAAM,SAAZ,UACE,uBAAOA,MAAM,oBAAoBC,KAAK,SAASS,YAAY,SAAS,aAAW,WAC/E,wBAAQV,MAAM,0BAA0BC,KAAK,SAA7C,mCCkCSU,EAjFG,SAACb,GACf,MAAwBQ,mBAAS,IAAjC,mBAAOM,EAAP,KAAaC,EAAb,KACA,EAA0BP,mBAAS,MAAnC,mBAAOC,EAAP,KAAcO,EAAd,KAqCMC,EAAY,SAACZ,EAAKF,GACpBa,EAAS,CAAEX,MAAKF,SAChBe,YAAW,WACPF,EAAS,QACV,OAQP,OACI,mCACI,sBAAKG,UAAS,6BAAuC,SAAfnB,EAAMoB,KAAkB,OAAS,SAAWC,MAAO,CACrFf,QAAS,OAAQgB,cAAe,SAChCC,WAAY,SAAUC,OAAQ,QAASC,eAAgB,UAF3D,UAII,cAAC,EAAD,CAAOxB,QAASQ,IAEhB,sBAAKU,UAAS,wBAAkC,SAAfnB,EAAMoB,KAAkB,OAAS,SAAlE,UACI,sBAAKD,UAAU,OAAf,UACI,uBAAOO,QAAQ,8BAA8BP,UAAS,0BAAoC,SAAfnB,EAAMoB,KAAkB,QAAU,QAA7G,6BACA,0BAAUD,UAAS,4BAAsC,SAAfnB,EAAMoB,KAAkB,QAAU,QAAUC,MAAsB,SAAfrB,EAAMoB,KAAkB,CAAEO,gBAAiB,WAAc,CAAEA,gBAAiB,SAAWhB,GAAG,8BAA8BiB,KAAK,IAAIC,MAAOf,EAAMgB,SA3D3O,SAACC,GACjBhB,EAAQgB,EAAMC,OAAOH,aA4DT,wBAAQ1B,KAAK,SAASgB,UAAU,oCAAoCc,QAzDhE,WAChBlB,EAAQD,EAAKoB,qBACbjB,EAAU,yBAA0B,YAuDxB,wBACA,wBAAQd,KAAK,SAASgB,UAAU,oCAAoCc,QApDhE,WAChBlB,EAAQD,EAAKqB,qBACblB,EAAU,yBAA0B,YAkDxB,wBACA,wBAAQd,KAAK,SAASgB,UAAU,oCAAoCc,QA/CjE,WACf,IAAMG,EAAUtB,EAAKuB,MAAM,QAC3BtB,EAAQqB,EAAQE,KAAK,MACrBrB,EAAU,gBAAiB,YA4Cf,yBACA,wBAAQd,KAAK,SAASgB,UAAU,oCAAoCc,QAzCjE,WACf,IAAMM,EAAUC,SAASC,eAAe,+BAExCF,EAAQG,SACRH,EAAQI,kBAAkB,EAAG,OAC7BC,UAAUC,UAAUC,UAAUP,EAAQV,OACtCZ,EAAU,qBAAsB,YAmCpB,uBACA,wBAAQd,KAAK,SAASgB,UAAU,oCAAoCc,QAlCtE,WACZlB,EAAQ,IACRE,EAAU,UAAW,YAgCP,2BAEJ,oBAAGE,UAAS,eAAyB,SAAfnB,EAAMoB,KAAkB,QAAU,QAAxD,UAAmEN,EAAKiC,OAAxE,cAA2FjC,EAAKuB,MAAM,KAAKU,OAA3G,iBAEA,8CAAiBjC,EAAKiC,OAASjC,EAAKiC,OAAS,IAAKC,QAAQ,GAAK,QAC/D,8BACI,oBAAI7B,UAAS,eAAyB,SAAfnB,EAAMoB,KAAkB,QAAU,QAAzD,SAAoF,IAAhBN,EAAKiC,OAAe,UAAYjC,YCxDzGmC,EAjBH,WACV,MAAoBzC,mBAAS,SAA7B,mBAAMY,EAAN,KAAW8B,EAAX,KAQA,OACE,qCACE,cAAC,EAAD,CAAQC,eATS,WAEjBD,EADQ,UAAP9B,EACO,OAEA,UAKgCA,KAAMA,IAC9C,cAAC,EAAD,CAAWA,KAAMA,QCXvBgC,IAASC,OACP,cAAC,IAAMC,WAAP,UACA,cAAC,IAAD,UACA,cAAC,EAAD,QAGCd,SAASC,eAAe,W","file":"static/js/main.a269a085.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Alert = (props) => {\r\n    const display = () => {\r\n        if (props.content) {\r\n            return <div class={`alert alert-${props.content.type}`} role=\"alert\">\r\n                {props.content.msg}\r\n            </div>\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            {display()}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React, { useState } from 'react'\r\nimport Alert from './Alert';\r\n\r\nconst Navbar = (props) => {\r\n  const [alert, setAlert] = useState(null);\r\n\r\n  // const showAlert = (msg, type) => {\r\n  //   console.log(\"called am i\");\r\n  //   setAlert({ msg, type });\r\n  //   setTimeout(() => {\r\n  //     setAlert(null);\r\n  //   }, 1500)\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <Alert content={alert} />\r\n     \r\n\r\n<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n<div class=\"container-fluid\">\r\n  <a class=\"navbar-brand\" href=\"#\">Navbar</a>\r\n  <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n    <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" href=\"#\">Link</a>\r\n      </li>\r\n      <li class=\"nav-item dropdown\">\r\n        <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n          Dropdown\r\n        </a>\r\n        <ul class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n          <li><a class=\"dropdown-item\" href=\"#\">Action</a></li>\r\n          <li><a class=\"dropdown-item\" href=\"#\">Another action</a></li>\r\n          <li><hr class=\"dropdown-divider\"/></li>\r\n          <li><a class=\"dropdown-item\" href=\"#\">Something else here</a></li>\r\n        </ul>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link disabled\">Disabled</a>\r\n      </li>\r\n    </ul>\r\n    <form class=\"d-flex\">\r\n      <input class=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n      <button class=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n    </form>\r\n  </div>\r\n</div>\r\n</nav>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// <nav className={`navbar navbar-expand-lg navbar-${props.mode === 'dark' ? 'dark' : 'light'} bg-${props.mode === 'dark' ? 'dark' : 'light'}`}>\r\n// <div className=\"container-fluid\">\r\n//   <a className=\"navbar-brand\" href=\"#\">Wonder Text</a>\r\n//   <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n//     <span className=\"navbar-toggler-icon\"></span>\r\n//   </button>\r\n//   <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n//     <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n\r\n//     </ul>\r\n\r\n//     <div className=\"form-check form-switch\">\r\n//       <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={() => {\r\n//         { props.toggleDarkMode();  }\r\n//       }} />\r\n//       <label className={`form-check-label text-${props.mode === 'dark' ? 'light' : 'dark'}`} for=\"flexSwitchCheckDefault\">{props.mode === 'dark' ? 'Disable Dark Mode' : 'Enable Dark Mode'}</label>\r\n//     </div>\r\n//   </div>\r\n// </div>\r\n// </nav>","import React, { useState } from 'react'\r\nimport Alert from './Alert';\r\n\r\nconst Text_Area = (props) => {\r\n    const [text, setText] = useState('');\r\n    const [alert, setAlert] = useState(null);\r\n    const handleEvent = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const toUpperCase = () => {\r\n        setText(text.toLocaleUpperCase());\r\n        showAlert(\"Converted To Uppercase\", \"success\");\r\n    }\r\n\r\n\r\n    const toLowerCase = () => {\r\n        setText(text.toLocaleLowerCase());\r\n        showAlert(\"Converted To Lowercase\", \"success\");\r\n    }\r\n\r\n\r\n    const clearSpace = () => {\r\n        const newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        showAlert(\"Space Cleared\", \"success\");\r\n    }\r\n\r\n\r\n    const handleCopy = () => {\r\n        const copyTxt = document.getElementById(\"exampleFormControlTextarea1\");\r\n        // console.log(copyTxt.value);\r\n        copyTxt.select();\r\n        copyTxt.setSelectionRange(0, 99999);\r\n        navigator.clipboard.writeText(copyTxt.value);\r\n        showAlert(\"Sucessfully Copied\", \"success\");\r\n    }\r\n  const clearText=()=>{\r\n      setText('');\r\n      showAlert(\"text Cl\", \"success\");\r\n  }\r\n\r\n    const showAlert = (msg, type) => {\r\n        setAlert({ msg, type });\r\n        setTimeout(() => {\r\n            setAlert(null);\r\n        }, 1500)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className={`container-fluid bg-${props.mode === \"dark\" ? \"dark\" : \"light\"}`} style={{\r\n                display: \"flex\", flexDirection: \"column\",\r\n                alignItems: \"center\", height: \"100vh\", justifyContent: \"center\"\r\n            }} >\r\n                <Alert content={alert} />\r\n\r\n                <div className={`container  bg-${props.mode === \"dark\" ? \"dark\" : \"light\"}`}>\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"exampleFormControlTextarea1\" className={`form-label text-${props.mode === 'dark' ? 'light' : 'dark'}`}>Enter Some Text</label>\r\n                        <textarea className={`form-control text-${props.mode === 'dark' ? 'light' : 'dark'}`} style={props.mode === 'dark' ? { backgroundColor: \"#738580\" } : { backgroundColor: \"white\" }} id=\"exampleFormControlTextarea1\" rows=\"6\" value={text} onChange={handleEvent}></textarea>\r\n                    </div>\r\n                    <button type=\"button\" className=\"btn btn-outline-success mx-2 my-2\" onClick={toUpperCase}>Upper Case</button>\r\n                    <button type=\"button\" className=\"btn btn-outline-success mx-2 my-2\" onClick={toLowerCase}>Lower Case</button>\r\n                    <button type=\"button\" className=\"btn btn-outline-success mx-2 my-2\" onClick={clearSpace}>Clear Space</button>\r\n                    <button type=\"button\" className=\"btn btn-outline-success mx-2 my-2\" onClick={handleCopy}>Copy Text</button>\r\n                    <button type=\"button\" className=\"btn btn-outline-success mx-2 my-2\" onClick={clearText}>Clear Text</button>\r\n                </div>\r\n                <p className={`text-${props.mode === 'dark' ? 'light' : 'dark'}`}>{text.length} words and {text.split(\" \").length} charecters</p>\r\n\r\n                <p>time To Read {text.length ? text.length * 0.43.toFixed(2) : \">>\"}</p>\r\n                <div>\r\n                    <h2 className={`text-${props.mode === 'dark' ? 'light' : 'dark'}`}>{text.length === 0 ? 'Preview' : text}</h2>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Text_Area\r\n","import React,{useState} from 'react'\r\nimport Navbar from './Component/Navbar'\r\nimport Text_Area from './Component/Text_Area'\r\n\r\nconst App = () => {\r\n  const[mode,setMode]=useState('light');\r\n  const toggleDarkMode=()=>{\r\n    if(mode==='light'){\r\n      setMode('dark');\r\n    }else{\r\n      setMode('light');\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <Navbar toggleDarkMode={toggleDarkMode} mode={mode}/>\r\n      <Text_Area mode={mode}/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDom.render(\n  <React.StrictMode>\n  <BrowserRouter>\n  <App/>\n  </BrowserRouter>\n  </React.StrictMode>\n  ,document.getElementById('root')\n);\n"],"sourceRoot":""}