{"version":3,"sources":["Component/Alert.js","Component/Navbar.js","Component/Text_Area.js","App.js","index.js"],"names":["Alert","props","content","class","type","role","msg","display","Navbar","useState","alert","className","mode","href","id","onClick","toggleDarkMode","for","Text_Area","text","setText","setAlert","showAlert","setTimeout","style","flexDirection","alignItems","height","justifyContent","htmlFor","backgroundColor","rows","value","onChange","event","target","toLocaleUpperCase","toLocaleLowerCase","newText","split","join","copyTxt","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","length","toFixed","App","setMode","ReactDom","render","StrictMode"],"mappings":"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","file":"static/js/main.5b4fdb02.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Alert = (props) => {\r\n    const display = () => {\r\n        if (props.content) {\r\n            return <div class={`alert alert-${props.content.type}`} role=\"alert\">\r\n                {props.content.msg}\r\n            </div>\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            {display()}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React, { useState } from 'react'\r\nimport Alert from './Alert';\r\n\r\nconst Navbar = (props) => {\r\n  const [alert, setAlert] = useState(null);\r\n\r\n  // const showAlert = (msg, type) => {\r\n  //   console.log(\"called am i\");\r\n  //   setAlert({ msg, type });\r\n  //   setTimeout(() => {\r\n  //     setAlert(null);\r\n  //   }, 1500)\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <Alert content={alert} />\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode === 'dark' ? 'dark' : 'light'} bg-${props.mode === 'dark' ? 'dark' : 'light'}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">Wonder Text</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n\r\n            </ul>\r\n\r\n            <div className=\"form-check form-switch\">\r\n              <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={() => {\r\n                { props.toggleDarkMode();  }\r\n              }} />\r\n              <label className={`form-check-label text-${props.mode === 'dark' ? 'light' : 'dark'}`} for=\"flexSwitchCheckDefault\">{props.mode === 'dark' ? 'Disable Dark Mode' : 'Enable Dark Mode'}</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n\r\n    \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import React, { useState } from 'react'\r\nimport Alert from './Alert';\r\n\r\nconst Text_Area = (props) => {\r\n    const [text, setText] = useState('');\r\n    const [alert, setAlert] = useState(null);\r\n    const handleEvent = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const toUpperCase = () => {\r\n        setText(text.toLocaleUpperCase());\r\n        showAlert(\"Converted To Uppercase\", \"success\");\r\n    }\r\n\r\n\r\n    const toLowerCase = () => {\r\n        setText(text.toLocaleLowerCase());\r\n        showAlert(\"Converted To Lowercase\", \"success\");\r\n    }\r\n\r\n\r\n    const clearSpace = () => {\r\n        const newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        showAlert(\"Space Cleared\", \"success\");\r\n    }\r\n\r\n\r\n    const handleCopy = () => {\r\n        const copyTxt = document.getElementById(\"exampleFormControlTextarea1\");\r\n        // console.log(copyTxt.value);\r\n        copyTxt.select();\r\n        copyTxt.setSelectionRange(0, 99999);\r\n        navigator.clipboard.writeText(copyTxt.value);\r\n        showAlert(\"Sucessfully Copied\", \"success\");\r\n    }\r\n  const clearText=()=>{\r\n      setText('');\r\n      showAlert(\"text Cl\", \"success\");\r\n  }\r\n\r\n    const showAlert = (msg, type) => {\r\n        setAlert({ msg, type });\r\n        setTimeout(() => {\r\n            setAlert(null);\r\n        }, 1500)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className={`container-fluid bg-${props.mode === \"dark\" ? \"dark\" : \"light\"}`} style={{\r\n                display: \"flex\", flexDirection: \"column\",\r\n                alignItems: \"center\", height: \"100vh\", justifyContent: \"center\"\r\n            }} >\r\n                <Alert content={alert} />\r\n\r\n                <div className={`container  bg-${props.mode === \"dark\" ? \"dark\" : \"light\"}`}>\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"exampleFormControlTextarea1\" className={`form-label text-${props.mode === 'dark' ? 'light' : 'dark'}`}>Enter Some Text</label>\r\n                        <textarea className={`form-control text-${props.mode === 'dark' ? 'light' : 'dark'}`} style={props.mode === 'dark' ? { backgroundColor: \"#738580\" } : { backgroundColor: \"white\" }} id=\"exampleFormControlTextarea1\" rows=\"6\" value={text} onChange={handleEvent}></textarea>\r\n                    </div>\r\n                    <button type=\"button\" className=\"btn btn-outline-success mx-2 my-2\" onClick={toUpperCase}>Upper Case</button>\r\n                    <button type=\"button\" className=\"btn btn-outline-success mx-2 my-2\" onClick={toLowerCase}>Lower Case</button>\r\n                    <button type=\"button\" className=\"btn btn-outline-success mx-2 my-2\" onClick={clearSpace}>Clear Space</button>\r\n                    <button type=\"button\" className=\"btn btn-outline-success mx-2 my-2\" onClick={handleCopy}>Copy Text</button>\r\n                    <button type=\"button\" className=\"btn btn-outline-success mx-2 my-2\" onClick={clearText}>Clear Text</button>\r\n                </div>\r\n                <p className={`text-${props.mode === 'dark' ? 'light' : 'dark'}`}>{text.length} words and {text.split(\" \").length} charecters</p>\r\n\r\n                <p>time To Read {text.length ? text.length * 0.43.toFixed(2) : \">>\"}</p>\r\n                <div>\r\n                    <h2 className={`text-${props.mode === 'dark' ? 'light' : 'dark'}`}>{text.length === 0 ? 'Preview' : text}</h2>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Text_Area\r\n","import React,{useState} from 'react'\r\nimport Navbar from './Component/Navbar'\r\nimport Text_Area from './Component/Text_Area'\r\n\r\nconst App = () => {\r\n  const[mode,setMode]=useState('light');\r\n  const toggleDarkMode=()=>{\r\n    if(mode==='light'){\r\n      setMode('dark');\r\n    }else{\r\n      setMode('light');\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <Navbar toggleDarkMode={toggleDarkMode} mode={mode}/>\r\n      <Text_Area mode={mode}/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDom.render(\n  <React.StrictMode>\n  <BrowserRouter>\n  <App/>\n  </BrowserRouter>\n  </React.StrictMode>\n  ,document.getElementById('root')\n);\n"],"sourceRoot":""}